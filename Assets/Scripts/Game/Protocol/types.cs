// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: types.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Bs.Types {

  /// <summary>Holder for reflection information generated from types.proto</summary>
  public static partial class TypesReflection {

    #region Descriptor
    /// <summary>File descriptor for types.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TypesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cgt0eXBlcy5wcm90bxIIYnMudHlwZXMiJwoJRXJyb3JJbmZvEgwKBGNvZGUY",
            "ASABKAUSDAoEaW5mbxgCIAEoCSJDCghQcm9wSXRlbRIjCgdwcm9wX2lkGAEg",
            "ASgOMhIuYnMudHlwZXMuUHJvcFR5cGUSEgoKcHJvcF9jb3VudBgCIAEoAyJG",
            "CgtCYXNlQXBwSW5mbxIMCgRuYW1lGAEgASgJEgwKBHR5cGUYAiABKA0SCgoC",
            "aWQYAyABKA0SDwoHdmVyc2lvbhgEIAEoDSKRAwoMQmFzZVVzZXJJbmZvEg8K",
            "B2FjY291bnQYASABKAkSDwoHdXNlcl9pZBgCIAEoBBIPCgdnYW1lX2lkGAMg",
            "ASgEEg4KBmdlbmRlchgEIAEoDRIPCgdmYWNlX2lkGAUgASgNEhMKC2N1c3Rv",
            "bV9mYWNlGAYgASgJEhEKCW5pY2tfbmFtZRgHIAEoCRIyCgl1c2VyX3R5cGUY",
            "CCABKA4yHy5icy50eXBlcy5CYXNlVXNlckluZm8uVXNlclR5cGUSJgoKdXNl",
            "cl9wcm9wcxgJIAMoCzISLmJzLnR5cGVzLlByb3BJdGVtEhEKCW1hcmtldF9p",
            "ZBgKIAEoDRIPCgdzaXRlX2lkGAsgASgNEhUKDXJlZ19tYXJrZXRfaWQYDCAB",
            "KA0SEwoLcmVnX3NpdGVfaWQYDSABKA0SFQoNcmVnaXN0ZXJfZGF0YRgOIAEo",
            "CRITCgtnYXRlX2Nvbm5pZBgPIAEoBCItCghVc2VyVHlwZRIKCgZVTktOT1cQ",
            "ABIKCgZOb3JtYWwQARIJCgVSb2JvdBAKIqsBCgxVc2VyUm9vbUluZm8SKQoJ",
            "YmFzZV9pbmZvGAEgASgLMhYuYnMudHlwZXMuQmFzZVVzZXJJbmZvEhAKCHRh",
            "YmxlX2lkGAIgASgEEg8KB3NlYXRfaWQYAyABKA0SEgoKdXNlcl9zdGF0ZRgE",
            "IAEoDRISCgpsb3N0X2NvdW50GAUgASgNEhIKCmRyYXdfY291bnQYBiABKA0S",
            "EQoJd2luX2NvdW50GAcgASgNIqECCghSb29tSW5mbxInCghhcHBfaW5mbxgB",
            "IAEoCzIVLmJzLnR5cGVzLkJhc2VBcHBJbmZvEgwKBGtpbmQYAiABKA0SKQoE",
            "dHlwZRgDIAEoDjIbLmJzLnR5cGVzLlJvb21JbmZvLlJvb21UeXBlEg0KBWxl",
            "dmVsGAQgASgNEgwKBG5hbWUYBSABKAkSEgoKYmFzZV9zY29yZRgGIAEoAxIQ",
            "Cghqb2luX21pbhgHIAEoAxIQCghqb2luX21heBgIIAEoAxIRCglvdXRfc2Nv",
            "cmUYCSABKAMSEQoJd2luX2xpbWl0GAogASgDIjgKCFJvb21UeXBlEggKBE5v",
            "bmUQABIICgRHb2xkEAESCwoHUHJpdmF0ZRAQEgsKB1JlZFBhY2sQICofCghQ",
            "cm9wVHlwZRIICgROb25lEAASCQoFU2NvcmUQAUIRWg9tYW5nby9hcGkvdHlw",
            "ZXNiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Bs.Types.PropType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Bs.Types.ErrorInfo), global::Bs.Types.ErrorInfo.Parser, new[]{ "Code", "Info" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bs.Types.PropItem), global::Bs.Types.PropItem.Parser, new[]{ "PropId", "PropCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bs.Types.BaseAppInfo), global::Bs.Types.BaseAppInfo.Parser, new[]{ "Name", "Type", "Id", "Version" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bs.Types.BaseUserInfo), global::Bs.Types.BaseUserInfo.Parser, new[]{ "Account", "UserId", "GameId", "Gender", "FaceId", "CustomFace", "NickName", "UserType", "UserProps", "MarketId", "SiteId", "RegMarketId", "RegSiteId", "RegisterData", "GateConnid" }, null, new[]{ typeof(global::Bs.Types.BaseUserInfo.Types.UserType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bs.Types.UserRoomInfo), global::Bs.Types.UserRoomInfo.Parser, new[]{ "BaseInfo", "TableId", "SeatId", "UserState", "LostCount", "DrawCount", "WinCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bs.Types.RoomInfo), global::Bs.Types.RoomInfo.Parser, new[]{ "AppInfo", "Kind", "Type", "Level", "Name", "BaseScore", "JoinMin", "JoinMax", "OutScore", "WinLimit" }, null, new[]{ typeof(global::Bs.Types.RoomInfo.Types.RoomType) }, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum PropType {
    [pbr::OriginalName("None")] None = 0,
    [pbr::OriginalName("Score")] Score = 1,
  }

  #endregion

  #region Messages
  public sealed partial class ErrorInfo : pb::IMessage<ErrorInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ErrorInfo> _parser = new pb::MessageParser<ErrorInfo>(() => new ErrorInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ErrorInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bs.Types.TypesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ErrorInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ErrorInfo(ErrorInfo other) : this() {
      code_ = other.code_;
      info_ = other.info_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ErrorInfo Clone() {
      return new ErrorInfo(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "info" field.</summary>
    public const int InfoFieldNumber = 2;
    private string info_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Info {
      get { return info_; }
      set {
        info_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ErrorInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ErrorInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Info != other.Info) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != 0) hash ^= Code.GetHashCode();
      if (Info.Length != 0) hash ^= Info.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (Info.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Info);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (Info.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Info);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (Info.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Info);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ErrorInfo other) {
      if (other == null) {
        return;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.Info.Length != 0) {
        Info = other.Info;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            Info = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            Info = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PropItem : pb::IMessage<PropItem>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PropItem> _parser = new pb::MessageParser<PropItem>(() => new PropItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PropItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bs.Types.TypesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PropItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PropItem(PropItem other) : this() {
      propId_ = other.propId_;
      propCount_ = other.propCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PropItem Clone() {
      return new PropItem(this);
    }

    /// <summary>Field number for the "prop_id" field.</summary>
    public const int PropIdFieldNumber = 1;
    private global::Bs.Types.PropType propId_ = global::Bs.Types.PropType.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Bs.Types.PropType PropId {
      get { return propId_; }
      set {
        propId_ = value;
      }
    }

    /// <summary>Field number for the "prop_count" field.</summary>
    public const int PropCountFieldNumber = 2;
    private long propCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long PropCount {
      get { return propCount_; }
      set {
        propCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PropItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PropItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PropId != other.PropId) return false;
      if (PropCount != other.PropCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (PropId != global::Bs.Types.PropType.None) hash ^= PropId.GetHashCode();
      if (PropCount != 0L) hash ^= PropCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PropId != global::Bs.Types.PropType.None) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PropId);
      }
      if (PropCount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(PropCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PropId != global::Bs.Types.PropType.None) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PropId);
      }
      if (PropCount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(PropCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (PropId != global::Bs.Types.PropType.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PropId);
      }
      if (PropCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PropCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PropItem other) {
      if (other == null) {
        return;
      }
      if (other.PropId != global::Bs.Types.PropType.None) {
        PropId = other.PropId;
      }
      if (other.PropCount != 0L) {
        PropCount = other.PropCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PropId = (global::Bs.Types.PropType) input.ReadEnum();
            break;
          }
          case 16: {
            PropCount = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PropId = (global::Bs.Types.PropType) input.ReadEnum();
            break;
          }
          case 16: {
            PropCount = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BaseAppInfo : pb::IMessage<BaseAppInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BaseAppInfo> _parser = new pb::MessageParser<BaseAppInfo>(() => new BaseAppInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BaseAppInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bs.Types.TypesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BaseAppInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BaseAppInfo(BaseAppInfo other) : this() {
      name_ = other.name_;
      type_ = other.type_;
      id_ = other.id_;
      version_ = other.version_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BaseAppInfo Clone() {
      return new BaseAppInfo(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private uint type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 3;
    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 4;
    private uint version_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BaseAppInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BaseAppInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Type != other.Type) return false;
      if (Id != other.Id) return false;
      if (Version != other.Version) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Version != 0) hash ^= Version.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Type != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Type);
      }
      if (Id != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Id);
      }
      if (Version != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Version);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Type != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Type);
      }
      if (Id != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Id);
      }
      if (Version != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Version);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Type);
      }
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (Version != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Version);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BaseAppInfo other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Version != 0) {
        Version = other.Version;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Type = input.ReadUInt32();
            break;
          }
          case 24: {
            Id = input.ReadUInt32();
            break;
          }
          case 32: {
            Version = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Type = input.ReadUInt32();
            break;
          }
          case 24: {
            Id = input.ReadUInt32();
            break;
          }
          case 32: {
            Version = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BaseUserInfo : pb::IMessage<BaseUserInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BaseUserInfo> _parser = new pb::MessageParser<BaseUserInfo>(() => new BaseUserInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BaseUserInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bs.Types.TypesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BaseUserInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BaseUserInfo(BaseUserInfo other) : this() {
      account_ = other.account_;
      userId_ = other.userId_;
      gameId_ = other.gameId_;
      gender_ = other.gender_;
      faceId_ = other.faceId_;
      customFace_ = other.customFace_;
      nickName_ = other.nickName_;
      userType_ = other.userType_;
      userProps_ = other.userProps_.Clone();
      marketId_ = other.marketId_;
      siteId_ = other.siteId_;
      regMarketId_ = other.regMarketId_;
      regSiteId_ = other.regSiteId_;
      registerData_ = other.registerData_;
      gateConnid_ = other.gateConnid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BaseUserInfo Clone() {
      return new BaseUserInfo(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private string account_ = "";
    /// <summary>
    ///用户账号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Account {
      get { return account_; }
      set {
        account_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 2;
    private ulong userId_;
    /// <summary>
    ///用户ID 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "game_id" field.</summary>
    public const int GameIdFieldNumber = 3;
    private ulong gameId_;
    /// <summary>
    ///数字ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong GameId {
      get { return gameId_; }
      set {
        gameId_ = value;
      }
    }

    /// <summary>Field number for the "gender" field.</summary>
    public const int GenderFieldNumber = 4;
    private uint gender_;
    /// <summary>
    ///性别
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Gender {
      get { return gender_; }
      set {
        gender_ = value;
      }
    }

    /// <summary>Field number for the "face_id" field.</summary>
    public const int FaceIdFieldNumber = 5;
    private uint faceId_;
    /// <summary>
    ///头像id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint FaceId {
      get { return faceId_; }
      set {
        faceId_ = value;
      }
    }

    /// <summary>Field number for the "custom_face" field.</summary>
    public const int CustomFaceFieldNumber = 6;
    private string customFace_ = "";
    /// <summary>
    ///自定义的图像地址
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CustomFace {
      get { return customFace_; }
      set {
        customFace_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nick_name" field.</summary>
    public const int NickNameFieldNumber = 7;
    private string nickName_ = "";
    /// <summary>
    ///昵称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NickName {
      get { return nickName_; }
      set {
        nickName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user_type" field.</summary>
    public const int UserTypeFieldNumber = 8;
    private global::Bs.Types.BaseUserInfo.Types.UserType userType_ = global::Bs.Types.BaseUserInfo.Types.UserType.Unknow;
    /// <summary>
    ///用户类别
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Bs.Types.BaseUserInfo.Types.UserType UserType {
      get { return userType_; }
      set {
        userType_ = value;
      }
    }

    /// <summary>Field number for the "user_props" field.</summary>
    public const int UserPropsFieldNumber = 9;
    private static readonly pb::FieldCodec<global::Bs.Types.PropItem> _repeated_userProps_codec
        = pb::FieldCodec.ForMessage(74, global::Bs.Types.PropItem.Parser);
    private readonly pbc::RepeatedField<global::Bs.Types.PropItem> userProps_ = new pbc::RepeatedField<global::Bs.Types.PropItem>();
    /// <summary>
    ///用户道具
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Bs.Types.PropItem> UserProps {
      get { return userProps_; }
    }

    /// <summary>Field number for the "market_id" field.</summary>
    public const int MarketIdFieldNumber = 10;
    private uint marketId_;
    /// <summary>
    ///登录主渠道
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MarketId {
      get { return marketId_; }
      set {
        marketId_ = value;
      }
    }

    /// <summary>Field number for the "site_id" field.</summary>
    public const int SiteIdFieldNumber = 11;
    private uint siteId_;
    /// <summary>
    ///登录子渠道
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SiteId {
      get { return siteId_; }
      set {
        siteId_ = value;
      }
    }

    /// <summary>Field number for the "reg_market_id" field.</summary>
    public const int RegMarketIdFieldNumber = 12;
    private uint regMarketId_;
    /// <summary>
    ///注册主渠道
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RegMarketId {
      get { return regMarketId_; }
      set {
        regMarketId_ = value;
      }
    }

    /// <summary>Field number for the "reg_site_id" field.</summary>
    public const int RegSiteIdFieldNumber = 13;
    private uint regSiteId_;
    /// <summary>
    ///注册子渠道
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RegSiteId {
      get { return regSiteId_; }
      set {
        regSiteId_ = value;
      }
    }

    /// <summary>Field number for the "register_data" field.</summary>
    public const int RegisterDataFieldNumber = 14;
    private string registerData_ = "";
    /// <summary>
    ///注册时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RegisterData {
      get { return registerData_; }
      set {
        registerData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gate_connid" field.</summary>
    public const int GateConnidFieldNumber = 15;
    private ulong gateConnid_;
    /// <summary>
    ///关联的gate连接id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong GateConnid {
      get { return gateConnid_; }
      set {
        gateConnid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BaseUserInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BaseUserInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Account != other.Account) return false;
      if (UserId != other.UserId) return false;
      if (GameId != other.GameId) return false;
      if (Gender != other.Gender) return false;
      if (FaceId != other.FaceId) return false;
      if (CustomFace != other.CustomFace) return false;
      if (NickName != other.NickName) return false;
      if (UserType != other.UserType) return false;
      if(!userProps_.Equals(other.userProps_)) return false;
      if (MarketId != other.MarketId) return false;
      if (SiteId != other.SiteId) return false;
      if (RegMarketId != other.RegMarketId) return false;
      if (RegSiteId != other.RegSiteId) return false;
      if (RegisterData != other.RegisterData) return false;
      if (GateConnid != other.GateConnid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Account.Length != 0) hash ^= Account.GetHashCode();
      if (UserId != 0UL) hash ^= UserId.GetHashCode();
      if (GameId != 0UL) hash ^= GameId.GetHashCode();
      if (Gender != 0) hash ^= Gender.GetHashCode();
      if (FaceId != 0) hash ^= FaceId.GetHashCode();
      if (CustomFace.Length != 0) hash ^= CustomFace.GetHashCode();
      if (NickName.Length != 0) hash ^= NickName.GetHashCode();
      if (UserType != global::Bs.Types.BaseUserInfo.Types.UserType.Unknow) hash ^= UserType.GetHashCode();
      hash ^= userProps_.GetHashCode();
      if (MarketId != 0) hash ^= MarketId.GetHashCode();
      if (SiteId != 0) hash ^= SiteId.GetHashCode();
      if (RegMarketId != 0) hash ^= RegMarketId.GetHashCode();
      if (RegSiteId != 0) hash ^= RegSiteId.GetHashCode();
      if (RegisterData.Length != 0) hash ^= RegisterData.GetHashCode();
      if (GateConnid != 0UL) hash ^= GateConnid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Account.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Account);
      }
      if (UserId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(UserId);
      }
      if (GameId != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(GameId);
      }
      if (Gender != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Gender);
      }
      if (FaceId != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(FaceId);
      }
      if (CustomFace.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(CustomFace);
      }
      if (NickName.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(NickName);
      }
      if (UserType != global::Bs.Types.BaseUserInfo.Types.UserType.Unknow) {
        output.WriteRawTag(64);
        output.WriteEnum((int) UserType);
      }
      userProps_.WriteTo(output, _repeated_userProps_codec);
      if (MarketId != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(MarketId);
      }
      if (SiteId != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(SiteId);
      }
      if (RegMarketId != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(RegMarketId);
      }
      if (RegSiteId != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(RegSiteId);
      }
      if (RegisterData.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(RegisterData);
      }
      if (GateConnid != 0UL) {
        output.WriteRawTag(120);
        output.WriteUInt64(GateConnid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Account.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Account);
      }
      if (UserId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(UserId);
      }
      if (GameId != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(GameId);
      }
      if (Gender != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Gender);
      }
      if (FaceId != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(FaceId);
      }
      if (CustomFace.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(CustomFace);
      }
      if (NickName.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(NickName);
      }
      if (UserType != global::Bs.Types.BaseUserInfo.Types.UserType.Unknow) {
        output.WriteRawTag(64);
        output.WriteEnum((int) UserType);
      }
      userProps_.WriteTo(ref output, _repeated_userProps_codec);
      if (MarketId != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(MarketId);
      }
      if (SiteId != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(SiteId);
      }
      if (RegMarketId != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(RegMarketId);
      }
      if (RegSiteId != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(RegSiteId);
      }
      if (RegisterData.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(RegisterData);
      }
      if (GateConnid != 0UL) {
        output.WriteRawTag(120);
        output.WriteUInt64(GateConnid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Account.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Account);
      }
      if (UserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UserId);
      }
      if (GameId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(GameId);
      }
      if (Gender != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Gender);
      }
      if (FaceId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FaceId);
      }
      if (CustomFace.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CustomFace);
      }
      if (NickName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NickName);
      }
      if (UserType != global::Bs.Types.BaseUserInfo.Types.UserType.Unknow) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) UserType);
      }
      size += userProps_.CalculateSize(_repeated_userProps_codec);
      if (MarketId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MarketId);
      }
      if (SiteId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SiteId);
      }
      if (RegMarketId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RegMarketId);
      }
      if (RegSiteId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RegSiteId);
      }
      if (RegisterData.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RegisterData);
      }
      if (GateConnid != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(GateConnid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BaseUserInfo other) {
      if (other == null) {
        return;
      }
      if (other.Account.Length != 0) {
        Account = other.Account;
      }
      if (other.UserId != 0UL) {
        UserId = other.UserId;
      }
      if (other.GameId != 0UL) {
        GameId = other.GameId;
      }
      if (other.Gender != 0) {
        Gender = other.Gender;
      }
      if (other.FaceId != 0) {
        FaceId = other.FaceId;
      }
      if (other.CustomFace.Length != 0) {
        CustomFace = other.CustomFace;
      }
      if (other.NickName.Length != 0) {
        NickName = other.NickName;
      }
      if (other.UserType != global::Bs.Types.BaseUserInfo.Types.UserType.Unknow) {
        UserType = other.UserType;
      }
      userProps_.Add(other.userProps_);
      if (other.MarketId != 0) {
        MarketId = other.MarketId;
      }
      if (other.SiteId != 0) {
        SiteId = other.SiteId;
      }
      if (other.RegMarketId != 0) {
        RegMarketId = other.RegMarketId;
      }
      if (other.RegSiteId != 0) {
        RegSiteId = other.RegSiteId;
      }
      if (other.RegisterData.Length != 0) {
        RegisterData = other.RegisterData;
      }
      if (other.GateConnid != 0UL) {
        GateConnid = other.GateConnid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Account = input.ReadString();
            break;
          }
          case 16: {
            UserId = input.ReadUInt64();
            break;
          }
          case 24: {
            GameId = input.ReadUInt64();
            break;
          }
          case 32: {
            Gender = input.ReadUInt32();
            break;
          }
          case 40: {
            FaceId = input.ReadUInt32();
            break;
          }
          case 50: {
            CustomFace = input.ReadString();
            break;
          }
          case 58: {
            NickName = input.ReadString();
            break;
          }
          case 64: {
            UserType = (global::Bs.Types.BaseUserInfo.Types.UserType) input.ReadEnum();
            break;
          }
          case 74: {
            userProps_.AddEntriesFrom(input, _repeated_userProps_codec);
            break;
          }
          case 80: {
            MarketId = input.ReadUInt32();
            break;
          }
          case 88: {
            SiteId = input.ReadUInt32();
            break;
          }
          case 96: {
            RegMarketId = input.ReadUInt32();
            break;
          }
          case 104: {
            RegSiteId = input.ReadUInt32();
            break;
          }
          case 114: {
            RegisterData = input.ReadString();
            break;
          }
          case 120: {
            GateConnid = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Account = input.ReadString();
            break;
          }
          case 16: {
            UserId = input.ReadUInt64();
            break;
          }
          case 24: {
            GameId = input.ReadUInt64();
            break;
          }
          case 32: {
            Gender = input.ReadUInt32();
            break;
          }
          case 40: {
            FaceId = input.ReadUInt32();
            break;
          }
          case 50: {
            CustomFace = input.ReadString();
            break;
          }
          case 58: {
            NickName = input.ReadString();
            break;
          }
          case 64: {
            UserType = (global::Bs.Types.BaseUserInfo.Types.UserType) input.ReadEnum();
            break;
          }
          case 74: {
            userProps_.AddEntriesFrom(ref input, _repeated_userProps_codec);
            break;
          }
          case 80: {
            MarketId = input.ReadUInt32();
            break;
          }
          case 88: {
            SiteId = input.ReadUInt32();
            break;
          }
          case 96: {
            RegMarketId = input.ReadUInt32();
            break;
          }
          case 104: {
            RegSiteId = input.ReadUInt32();
            break;
          }
          case 114: {
            RegisterData = input.ReadString();
            break;
          }
          case 120: {
            GateConnid = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the BaseUserInfo message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum UserType {
        /// <summary>
        ///未知
        /// </summary>
        [pbr::OriginalName("UNKNOW")] Unknow = 0,
        /// <summary>
        ///正常类型
        /// </summary>
        [pbr::OriginalName("Normal")] Normal = 1,
        /// <summary>
        ///机器人
        /// </summary>
        [pbr::OriginalName("Robot")] Robot = 10,
      }

    }
    #endregion

  }

  public sealed partial class UserRoomInfo : pb::IMessage<UserRoomInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserRoomInfo> _parser = new pb::MessageParser<UserRoomInfo>(() => new UserRoomInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UserRoomInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bs.Types.TypesReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserRoomInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserRoomInfo(UserRoomInfo other) : this() {
      baseInfo_ = other.baseInfo_ != null ? other.baseInfo_.Clone() : null;
      tableId_ = other.tableId_;
      seatId_ = other.seatId_;
      userState_ = other.userState_;
      lostCount_ = other.lostCount_;
      drawCount_ = other.drawCount_;
      winCount_ = other.winCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserRoomInfo Clone() {
      return new UserRoomInfo(this);
    }

    /// <summary>Field number for the "base_info" field.</summary>
    public const int BaseInfoFieldNumber = 1;
    private global::Bs.Types.BaseUserInfo baseInfo_;
    /// <summary>
    ///基础信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Bs.Types.BaseUserInfo BaseInfo {
      get { return baseInfo_; }
      set {
        baseInfo_ = value;
      }
    }

    /// <summary>Field number for the "table_id" field.</summary>
    public const int TableIdFieldNumber = 2;
    private ulong tableId_;
    /// <summary>
    ///所有桌子
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong TableId {
      get { return tableId_; }
      set {
        tableId_ = value;
      }
    }

    /// <summary>Field number for the "seat_id" field.</summary>
    public const int SeatIdFieldNumber = 3;
    private uint seatId_;
    /// <summary>
    ///所在位置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SeatId {
      get { return seatId_; }
      set {
        seatId_ = value;
      }
    }

    /// <summary>Field number for the "user_state" field.</summary>
    public const int UserStateFieldNumber = 4;
    private uint userState_;
    /// <summary>
    ///用户状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint UserState {
      get { return userState_; }
      set {
        userState_ = value;
      }
    }

    /// <summary>Field number for the "lost_count" field.</summary>
    public const int LostCountFieldNumber = 5;
    private uint lostCount_;
    /// <summary>
    ///玩家总输局
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint LostCount {
      get { return lostCount_; }
      set {
        lostCount_ = value;
      }
    }

    /// <summary>Field number for the "draw_count" field.</summary>
    public const int DrawCountFieldNumber = 6;
    private uint drawCount_;
    /// <summary>
    ///玩家总平局
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DrawCount {
      get { return drawCount_; }
      set {
        drawCount_ = value;
      }
    }

    /// <summary>Field number for the "win_count" field.</summary>
    public const int WinCountFieldNumber = 7;
    private uint winCount_;
    /// <summary>
    ///玩家总胜局		
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint WinCount {
      get { return winCount_; }
      set {
        winCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UserRoomInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UserRoomInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(BaseInfo, other.BaseInfo)) return false;
      if (TableId != other.TableId) return false;
      if (SeatId != other.SeatId) return false;
      if (UserState != other.UserState) return false;
      if (LostCount != other.LostCount) return false;
      if (DrawCount != other.DrawCount) return false;
      if (WinCount != other.WinCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (baseInfo_ != null) hash ^= BaseInfo.GetHashCode();
      if (TableId != 0UL) hash ^= TableId.GetHashCode();
      if (SeatId != 0) hash ^= SeatId.GetHashCode();
      if (UserState != 0) hash ^= UserState.GetHashCode();
      if (LostCount != 0) hash ^= LostCount.GetHashCode();
      if (DrawCount != 0) hash ^= DrawCount.GetHashCode();
      if (WinCount != 0) hash ^= WinCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (baseInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(BaseInfo);
      }
      if (TableId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(TableId);
      }
      if (SeatId != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(SeatId);
      }
      if (UserState != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(UserState);
      }
      if (LostCount != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(LostCount);
      }
      if (DrawCount != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(DrawCount);
      }
      if (WinCount != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(WinCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (baseInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(BaseInfo);
      }
      if (TableId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(TableId);
      }
      if (SeatId != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(SeatId);
      }
      if (UserState != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(UserState);
      }
      if (LostCount != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(LostCount);
      }
      if (DrawCount != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(DrawCount);
      }
      if (WinCount != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(WinCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (baseInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BaseInfo);
      }
      if (TableId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TableId);
      }
      if (SeatId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SeatId);
      }
      if (UserState != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UserState);
      }
      if (LostCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LostCount);
      }
      if (DrawCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DrawCount);
      }
      if (WinCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(WinCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UserRoomInfo other) {
      if (other == null) {
        return;
      }
      if (other.baseInfo_ != null) {
        if (baseInfo_ == null) {
          BaseInfo = new global::Bs.Types.BaseUserInfo();
        }
        BaseInfo.MergeFrom(other.BaseInfo);
      }
      if (other.TableId != 0UL) {
        TableId = other.TableId;
      }
      if (other.SeatId != 0) {
        SeatId = other.SeatId;
      }
      if (other.UserState != 0) {
        UserState = other.UserState;
      }
      if (other.LostCount != 0) {
        LostCount = other.LostCount;
      }
      if (other.DrawCount != 0) {
        DrawCount = other.DrawCount;
      }
      if (other.WinCount != 0) {
        WinCount = other.WinCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (baseInfo_ == null) {
              BaseInfo = new global::Bs.Types.BaseUserInfo();
            }
            input.ReadMessage(BaseInfo);
            break;
          }
          case 16: {
            TableId = input.ReadUInt64();
            break;
          }
          case 24: {
            SeatId = input.ReadUInt32();
            break;
          }
          case 32: {
            UserState = input.ReadUInt32();
            break;
          }
          case 40: {
            LostCount = input.ReadUInt32();
            break;
          }
          case 48: {
            DrawCount = input.ReadUInt32();
            break;
          }
          case 56: {
            WinCount = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (baseInfo_ == null) {
              BaseInfo = new global::Bs.Types.BaseUserInfo();
            }
            input.ReadMessage(BaseInfo);
            break;
          }
          case 16: {
            TableId = input.ReadUInt64();
            break;
          }
          case 24: {
            SeatId = input.ReadUInt32();
            break;
          }
          case 32: {
            UserState = input.ReadUInt32();
            break;
          }
          case 40: {
            LostCount = input.ReadUInt32();
            break;
          }
          case 48: {
            DrawCount = input.ReadUInt32();
            break;
          }
          case 56: {
            WinCount = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RoomInfo : pb::IMessage<RoomInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RoomInfo> _parser = new pb::MessageParser<RoomInfo>(() => new RoomInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RoomInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bs.Types.TypesReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoomInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoomInfo(RoomInfo other) : this() {
      appInfo_ = other.appInfo_ != null ? other.appInfo_.Clone() : null;
      kind_ = other.kind_;
      type_ = other.type_;
      level_ = other.level_;
      name_ = other.name_;
      baseScore_ = other.baseScore_;
      joinMin_ = other.joinMin_;
      joinMax_ = other.joinMax_;
      outScore_ = other.outScore_;
      winLimit_ = other.winLimit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoomInfo Clone() {
      return new RoomInfo(this);
    }

    /// <summary>Field number for the "app_info" field.</summary>
    public const int AppInfoFieldNumber = 1;
    private global::Bs.Types.BaseAppInfo appInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Bs.Types.BaseAppInfo AppInfo {
      get { return appInfo_; }
      set {
        appInfo_ = value;
      }
    }

    /// <summary>Field number for the "kind" field.</summary>
    public const int KindFieldNumber = 2;
    private uint kind_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Kind {
      get { return kind_; }
      set {
        kind_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private global::Bs.Types.RoomInfo.Types.RoomType type_ = global::Bs.Types.RoomInfo.Types.RoomType.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Bs.Types.RoomInfo.Types.RoomType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 4;
    private uint level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 5;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "base_score" field.</summary>
    public const int BaseScoreFieldNumber = 6;
    private long baseScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long BaseScore {
      get { return baseScore_; }
      set {
        baseScore_ = value;
      }
    }

    /// <summary>Field number for the "join_min" field.</summary>
    public const int JoinMinFieldNumber = 7;
    private long joinMin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long JoinMin {
      get { return joinMin_; }
      set {
        joinMin_ = value;
      }
    }

    /// <summary>Field number for the "join_max" field.</summary>
    public const int JoinMaxFieldNumber = 8;
    private long joinMax_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long JoinMax {
      get { return joinMax_; }
      set {
        joinMax_ = value;
      }
    }

    /// <summary>Field number for the "out_score" field.</summary>
    public const int OutScoreFieldNumber = 9;
    private long outScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long OutScore {
      get { return outScore_; }
      set {
        outScore_ = value;
      }
    }

    /// <summary>Field number for the "win_limit" field.</summary>
    public const int WinLimitFieldNumber = 10;
    private long winLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long WinLimit {
      get { return winLimit_; }
      set {
        winLimit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RoomInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RoomInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AppInfo, other.AppInfo)) return false;
      if (Kind != other.Kind) return false;
      if (Type != other.Type) return false;
      if (Level != other.Level) return false;
      if (Name != other.Name) return false;
      if (BaseScore != other.BaseScore) return false;
      if (JoinMin != other.JoinMin) return false;
      if (JoinMax != other.JoinMax) return false;
      if (OutScore != other.OutScore) return false;
      if (WinLimit != other.WinLimit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (appInfo_ != null) hash ^= AppInfo.GetHashCode();
      if (Kind != 0) hash ^= Kind.GetHashCode();
      if (Type != global::Bs.Types.RoomInfo.Types.RoomType.None) hash ^= Type.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (BaseScore != 0L) hash ^= BaseScore.GetHashCode();
      if (JoinMin != 0L) hash ^= JoinMin.GetHashCode();
      if (JoinMax != 0L) hash ^= JoinMax.GetHashCode();
      if (OutScore != 0L) hash ^= OutScore.GetHashCode();
      if (WinLimit != 0L) hash ^= WinLimit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (appInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AppInfo);
      }
      if (Kind != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Kind);
      }
      if (Type != global::Bs.Types.RoomInfo.Types.RoomType.None) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      if (Level != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Level);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Name);
      }
      if (BaseScore != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(BaseScore);
      }
      if (JoinMin != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(JoinMin);
      }
      if (JoinMax != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(JoinMax);
      }
      if (OutScore != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(OutScore);
      }
      if (WinLimit != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(WinLimit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (appInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AppInfo);
      }
      if (Kind != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Kind);
      }
      if (Type != global::Bs.Types.RoomInfo.Types.RoomType.None) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      if (Level != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Level);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Name);
      }
      if (BaseScore != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(BaseScore);
      }
      if (JoinMin != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(JoinMin);
      }
      if (JoinMax != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(JoinMax);
      }
      if (OutScore != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(OutScore);
      }
      if (WinLimit != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(WinLimit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (appInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AppInfo);
      }
      if (Kind != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Kind);
      }
      if (Type != global::Bs.Types.RoomInfo.Types.RoomType.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Level);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (BaseScore != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BaseScore);
      }
      if (JoinMin != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(JoinMin);
      }
      if (JoinMax != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(JoinMax);
      }
      if (OutScore != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(OutScore);
      }
      if (WinLimit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(WinLimit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RoomInfo other) {
      if (other == null) {
        return;
      }
      if (other.appInfo_ != null) {
        if (appInfo_ == null) {
          AppInfo = new global::Bs.Types.BaseAppInfo();
        }
        AppInfo.MergeFrom(other.AppInfo);
      }
      if (other.Kind != 0) {
        Kind = other.Kind;
      }
      if (other.Type != global::Bs.Types.RoomInfo.Types.RoomType.None) {
        Type = other.Type;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.BaseScore != 0L) {
        BaseScore = other.BaseScore;
      }
      if (other.JoinMin != 0L) {
        JoinMin = other.JoinMin;
      }
      if (other.JoinMax != 0L) {
        JoinMax = other.JoinMax;
      }
      if (other.OutScore != 0L) {
        OutScore = other.OutScore;
      }
      if (other.WinLimit != 0L) {
        WinLimit = other.WinLimit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (appInfo_ == null) {
              AppInfo = new global::Bs.Types.BaseAppInfo();
            }
            input.ReadMessage(AppInfo);
            break;
          }
          case 16: {
            Kind = input.ReadUInt32();
            break;
          }
          case 24: {
            Type = (global::Bs.Types.RoomInfo.Types.RoomType) input.ReadEnum();
            break;
          }
          case 32: {
            Level = input.ReadUInt32();
            break;
          }
          case 42: {
            Name = input.ReadString();
            break;
          }
          case 48: {
            BaseScore = input.ReadInt64();
            break;
          }
          case 56: {
            JoinMin = input.ReadInt64();
            break;
          }
          case 64: {
            JoinMax = input.ReadInt64();
            break;
          }
          case 72: {
            OutScore = input.ReadInt64();
            break;
          }
          case 80: {
            WinLimit = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (appInfo_ == null) {
              AppInfo = new global::Bs.Types.BaseAppInfo();
            }
            input.ReadMessage(AppInfo);
            break;
          }
          case 16: {
            Kind = input.ReadUInt32();
            break;
          }
          case 24: {
            Type = (global::Bs.Types.RoomInfo.Types.RoomType) input.ReadEnum();
            break;
          }
          case 32: {
            Level = input.ReadUInt32();
            break;
          }
          case 42: {
            Name = input.ReadString();
            break;
          }
          case 48: {
            BaseScore = input.ReadInt64();
            break;
          }
          case 56: {
            JoinMin = input.ReadInt64();
            break;
          }
          case 64: {
            JoinMax = input.ReadInt64();
            break;
          }
          case 72: {
            OutScore = input.ReadInt64();
            break;
          }
          case 80: {
            WinLimit = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the RoomInfo message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum RoomType {
        [pbr::OriginalName("None")] None = 0,
        /// <summary>
        ///金币
        /// </summary>
        [pbr::OriginalName("Gold")] Gold = 1,
        /// <summary>
        ///私有
        /// </summary>
        [pbr::OriginalName("Private")] Private = 16,
        /// <summary>
        ///红包
        /// </summary>
        [pbr::OriginalName("RedPack")] RedPack = 32,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
