// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: types.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Bs.Types {

  /// <summary>Holder for reflection information generated from types.proto</summary>
  public static partial class TypesReflection {

    #region Descriptor
    /// <summary>File descriptor for types.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TypesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cgt0eXBlcy5wcm90bxIIYnMudHlwZXMibgoJRXJyb3JJbmZvEiwKBGNvZGUY",
            "ASABKA4yHi5icy50eXBlcy5FcnJvckluZm8uUmVzdWx0Q29kZRIMCgRpbmZv",
            "GAIgASgJIiUKClJlc3VsdENvZGUSCwoHc3VjY2VzcxAAEgoKBmZhaWxlZBAB",
            "InMKCFByb3BJdGVtEicKAmlkGAEgASgOMhsuYnMudHlwZXMuUHJvcEl0ZW0u",
            "UHJvcFR5cGUSDQoFY291bnQYAiABKAMiLwoIUHJvcFR5cGUSCAoEY29pbhAA",
            "EgkKBWluZ290EAESDgoKcmVkX3BhY2tldBACIkYKC0Jhc2VBcHBJbmZvEgwK",
            "BG5hbWUYASABKAkSDAoEdHlwZRgCIAEoDRIKCgJpZBgDIAEoDRIPCgd2ZXJz",
            "aW9uGAQgASgNItAECgxCYXNlVXNlckluZm8SDwoHYWNjb3VudBgBIAEoCRIP",
            "Cgd1c2VyX2lkGAIgASgEEg8KB2dhbWVfaWQYAyABKAQSDgoGZ2VuZGVyGAQg",
            "ASgNEg8KB2ZhY2VfaWQYBSABKA0SEwoLY3VzdG9tX2ZhY2UYBiABKAkSEQoJ",
            "bmlja19uYW1lGAcgASgJEi0KBHR5cGUYCCABKA4yHy5icy50eXBlcy5CYXNl",
            "VXNlckluZm8uVXNlclR5cGUSIQoFcHJvcHMYCSADKAsyEi5icy50eXBlcy5Q",
            "cm9wSXRlbRIQCgh0YWJsZV9pZBgKIAEoDRIPCgdzZWF0X2lkGAsgASgNEjEK",
            "BnN0YXR1cxgMIAEoDjIhLmJzLnR5cGVzLkJhc2VVc2VySW5mby5Vc2VyU3Rh",
            "dHVzEhEKCW1hcmtldF9pZBgNIAEoDRIPCgdzaXRlX2lkGA4gASgNEhUKDXJl",
            "Z19tYXJrZXRfaWQYDyABKA0SEwoLcmVnX3NpdGVfaWQYECABKA0SFQoNcmVn",
            "aXN0ZXJfZGF0YRgRIAEoCRIUCgxnYXRlX2Nvbm5faWQYEiABKAQSFAoMcm9v",
            "bV9jb25uX2lkGBMgASgEIi0KCFVzZXJUeXBlEgoKBnVua25vdxAAEgoKBm5v",
            "cm1hbBABEgkKBXJvYm90EAoiWgoKVXNlclN0YXR1cxIICgRub25lEAASCAoE",
            "ZnJlZRABEgcKA3NpdBACEgkKBXJlYWR5EAMSCgoGbG9va29uEAQSCwoHcGxh",
            "eWluZxAFEgsKB29mZmxpbmUQBiL/AgoIUm9vbUluZm8SJwoIYXBwX2luZm8Y",
            "ASABKAsyFS5icy50eXBlcy5CYXNlQXBwSW5mbxIMCgRraW5kGAIgASgNEikK",
            "BHR5cGUYAyABKA4yGy5icy50eXBlcy5Sb29tSW5mby5Sb29tVHlwZRINCgVs",
            "ZXZlbBgEIAEoDRIMCgRuYW1lGAUgASgJEhIKCmNlbGxfc2NvcmUYBiABKAMS",
            "FQoNcmV2ZW51ZV9yYXRpbxgHIAEoDRIVCg1zZXJ2aWNlX3Njb3JlGAggASgD",
            "EhUKDXNlcnZpY2VfaW5nb3QYCSABKAMSFgoOcmVzdHJpY3Rfc2NvcmUYCiAB",
            "KAMSFwoPbWluX3RhYmxlX3Njb3JlGAsgASgDEhcKD21pbl9lbnRlcl9zY29y",
            "ZRgMIAEoAxIXCg9tYXhfZW50ZXJfc2NvcmUYDSABKAMiOAoIUm9vbVR5cGUS",
            "CAoEbm9uZRAAEggKBGdvbGQQARILCgdwcml2YXRlEBASCwoHcmVkUGFjaxAg",
            "Im4KC1RhYmxlU3RhdHVzEhIKCnRhYmxlX2xvY2sYASABKA0SEwoLcGxheV9z",
            "dGF0dXMYAiABKA0SEAoIY2x1Yl9udW0YAyABKA0SEAoIcm9vbV9udW0YBCAB",
            "KA0SEgoKY2VsbF9zY29yZRgFIAEoBUIRWg9tYW5nby9hcGkvdHlwZXNiBnBy",
            "b3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Bs.Types.ErrorInfo), global::Bs.Types.ErrorInfo.Parser, new[]{ "Code", "Info" }, null, new[]{ typeof(global::Bs.Types.ErrorInfo.Types.ResultCode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bs.Types.PropItem), global::Bs.Types.PropItem.Parser, new[]{ "Id", "Count" }, null, new[]{ typeof(global::Bs.Types.PropItem.Types.PropType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bs.Types.BaseAppInfo), global::Bs.Types.BaseAppInfo.Parser, new[]{ "Name", "Type", "Id", "Version" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bs.Types.BaseUserInfo), global::Bs.Types.BaseUserInfo.Parser, new[]{ "Account", "UserId", "GameId", "Gender", "FaceId", "CustomFace", "NickName", "Type", "Props", "TableId", "SeatId", "Status", "MarketId", "SiteId", "RegMarketId", "RegSiteId", "RegisterData", "GateConnId", "RoomConnId" }, null, new[]{ typeof(global::Bs.Types.BaseUserInfo.Types.UserType), typeof(global::Bs.Types.BaseUserInfo.Types.UserStatus) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bs.Types.RoomInfo), global::Bs.Types.RoomInfo.Parser, new[]{ "AppInfo", "Kind", "Type", "Level", "Name", "CellScore", "RevenueRatio", "ServiceScore", "ServiceIngot", "RestrictScore", "MinTableScore", "MinEnterScore", "MaxEnterScore" }, null, new[]{ typeof(global::Bs.Types.RoomInfo.Types.RoomType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bs.Types.TableStatus), global::Bs.Types.TableStatus.Parser, new[]{ "TableLock", "PlayStatus", "ClubNum", "RoomNum", "CellScore" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ErrorInfo : pb::IMessage<ErrorInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ErrorInfo> _parser = new pb::MessageParser<ErrorInfo>(() => new ErrorInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ErrorInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bs.Types.TypesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ErrorInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ErrorInfo(ErrorInfo other) : this() {
      code_ = other.code_;
      info_ = other.info_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ErrorInfo Clone() {
      return new ErrorInfo(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private global::Bs.Types.ErrorInfo.Types.ResultCode code_ = global::Bs.Types.ErrorInfo.Types.ResultCode.Success;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Bs.Types.ErrorInfo.Types.ResultCode Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "info" field.</summary>
    public const int InfoFieldNumber = 2;
    private string info_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Info {
      get { return info_; }
      set {
        info_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ErrorInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ErrorInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Info != other.Info) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != global::Bs.Types.ErrorInfo.Types.ResultCode.Success) hash ^= Code.GetHashCode();
      if (Info.Length != 0) hash ^= Info.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Code != global::Bs.Types.ErrorInfo.Types.ResultCode.Success) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      if (Info.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Info);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Code != global::Bs.Types.ErrorInfo.Types.ResultCode.Success) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      if (Info.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Info);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Code != global::Bs.Types.ErrorInfo.Types.ResultCode.Success) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      if (Info.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Info);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ErrorInfo other) {
      if (other == null) {
        return;
      }
      if (other.Code != global::Bs.Types.ErrorInfo.Types.ResultCode.Success) {
        Code = other.Code;
      }
      if (other.Info.Length != 0) {
        Info = other.Info;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = (global::Bs.Types.ErrorInfo.Types.ResultCode) input.ReadEnum();
            break;
          }
          case 18: {
            Info = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = (global::Bs.Types.ErrorInfo.Types.ResultCode) input.ReadEnum();
            break;
          }
          case 18: {
            Info = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ErrorInfo message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum ResultCode {
        [pbr::OriginalName("success")] Success = 0,
        [pbr::OriginalName("failed")] Failed = 1,
      }

    }
    #endregion

  }

  public sealed partial class PropItem : pb::IMessage<PropItem>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PropItem> _parser = new pb::MessageParser<PropItem>(() => new PropItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PropItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bs.Types.TypesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PropItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PropItem(PropItem other) : this() {
      id_ = other.id_;
      count_ = other.count_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PropItem Clone() {
      return new PropItem(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::Bs.Types.PropItem.Types.PropType id_ = global::Bs.Types.PropItem.Types.PropType.Coin;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Bs.Types.PropItem.Types.PropType Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 2;
    private long count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PropItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PropItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Count != other.Count) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != global::Bs.Types.PropItem.Types.PropType.Coin) hash ^= Id.GetHashCode();
      if (Count != 0L) hash ^= Count.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != global::Bs.Types.PropItem.Types.PropType.Coin) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Id);
      }
      if (Count != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != global::Bs.Types.PropItem.Types.PropType.Coin) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Id);
      }
      if (Count != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != global::Bs.Types.PropItem.Types.PropType.Coin) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Id);
      }
      if (Count != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Count);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PropItem other) {
      if (other == null) {
        return;
      }
      if (other.Id != global::Bs.Types.PropItem.Types.PropType.Coin) {
        Id = other.Id;
      }
      if (other.Count != 0L) {
        Count = other.Count;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = (global::Bs.Types.PropItem.Types.PropType) input.ReadEnum();
            break;
          }
          case 16: {
            Count = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = (global::Bs.Types.PropItem.Types.PropType) input.ReadEnum();
            break;
          }
          case 16: {
            Count = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the PropItem message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum PropType {
        [pbr::OriginalName("coin")] Coin = 0,
        [pbr::OriginalName("ingot")] Ingot = 1,
        [pbr::OriginalName("red_packet")] RedPacket = 2,
      }

    }
    #endregion

  }

  public sealed partial class BaseAppInfo : pb::IMessage<BaseAppInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BaseAppInfo> _parser = new pb::MessageParser<BaseAppInfo>(() => new BaseAppInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BaseAppInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bs.Types.TypesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BaseAppInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BaseAppInfo(BaseAppInfo other) : this() {
      name_ = other.name_;
      type_ = other.type_;
      id_ = other.id_;
      version_ = other.version_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BaseAppInfo Clone() {
      return new BaseAppInfo(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private uint type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 3;
    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 4;
    private uint version_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BaseAppInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BaseAppInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Type != other.Type) return false;
      if (Id != other.Id) return false;
      if (Version != other.Version) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Version != 0) hash ^= Version.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Type != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Type);
      }
      if (Id != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Id);
      }
      if (Version != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Version);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Type != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Type);
      }
      if (Id != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Id);
      }
      if (Version != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Version);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Type);
      }
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (Version != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Version);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BaseAppInfo other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Version != 0) {
        Version = other.Version;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Type = input.ReadUInt32();
            break;
          }
          case 24: {
            Id = input.ReadUInt32();
            break;
          }
          case 32: {
            Version = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Type = input.ReadUInt32();
            break;
          }
          case 24: {
            Id = input.ReadUInt32();
            break;
          }
          case 32: {
            Version = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BaseUserInfo : pb::IMessage<BaseUserInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BaseUserInfo> _parser = new pb::MessageParser<BaseUserInfo>(() => new BaseUserInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BaseUserInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bs.Types.TypesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BaseUserInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BaseUserInfo(BaseUserInfo other) : this() {
      account_ = other.account_;
      userId_ = other.userId_;
      gameId_ = other.gameId_;
      gender_ = other.gender_;
      faceId_ = other.faceId_;
      customFace_ = other.customFace_;
      nickName_ = other.nickName_;
      type_ = other.type_;
      props_ = other.props_.Clone();
      tableId_ = other.tableId_;
      seatId_ = other.seatId_;
      status_ = other.status_;
      marketId_ = other.marketId_;
      siteId_ = other.siteId_;
      regMarketId_ = other.regMarketId_;
      regSiteId_ = other.regSiteId_;
      registerData_ = other.registerData_;
      gateConnId_ = other.gateConnId_;
      roomConnId_ = other.roomConnId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BaseUserInfo Clone() {
      return new BaseUserInfo(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private string account_ = "";
    /// <summary>
    ///用户账号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Account {
      get { return account_; }
      set {
        account_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 2;
    private ulong userId_;
    /// <summary>
    ///用户ID 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "game_id" field.</summary>
    public const int GameIdFieldNumber = 3;
    private ulong gameId_;
    /// <summary>
    ///数字ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong GameId {
      get { return gameId_; }
      set {
        gameId_ = value;
      }
    }

    /// <summary>Field number for the "gender" field.</summary>
    public const int GenderFieldNumber = 4;
    private uint gender_;
    /// <summary>
    ///性别
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Gender {
      get { return gender_; }
      set {
        gender_ = value;
      }
    }

    /// <summary>Field number for the "face_id" field.</summary>
    public const int FaceIdFieldNumber = 5;
    private uint faceId_;
    /// <summary>
    ///头像id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint FaceId {
      get { return faceId_; }
      set {
        faceId_ = value;
      }
    }

    /// <summary>Field number for the "custom_face" field.</summary>
    public const int CustomFaceFieldNumber = 6;
    private string customFace_ = "";
    /// <summary>
    ///自定义的图像地址
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CustomFace {
      get { return customFace_; }
      set {
        customFace_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nick_name" field.</summary>
    public const int NickNameFieldNumber = 7;
    private string nickName_ = "";
    /// <summary>
    ///用户昵称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NickName {
      get { return nickName_; }
      set {
        nickName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 8;
    private global::Bs.Types.BaseUserInfo.Types.UserType type_ = global::Bs.Types.BaseUserInfo.Types.UserType.Unknow;
    /// <summary>
    ///用户类别
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Bs.Types.BaseUserInfo.Types.UserType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "props" field.</summary>
    public const int PropsFieldNumber = 9;
    private static readonly pb::FieldCodec<global::Bs.Types.PropItem> _repeated_props_codec
        = pb::FieldCodec.ForMessage(74, global::Bs.Types.PropItem.Parser);
    private readonly pbc::RepeatedField<global::Bs.Types.PropItem> props_ = new pbc::RepeatedField<global::Bs.Types.PropItem>();
    /// <summary>
    ///用户道具
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Bs.Types.PropItem> Props {
      get { return props_; }
    }

    /// <summary>Field number for the "table_id" field.</summary>
    public const int TableIdFieldNumber = 10;
    private uint tableId_;
    /// <summary>
    ///所有桌子
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TableId {
      get { return tableId_; }
      set {
        tableId_ = value;
      }
    }

    /// <summary>Field number for the "seat_id" field.</summary>
    public const int SeatIdFieldNumber = 11;
    private uint seatId_;
    /// <summary>
    ///所在位置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SeatId {
      get { return seatId_; }
      set {
        seatId_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 12;
    private global::Bs.Types.BaseUserInfo.Types.UserStatus status_ = global::Bs.Types.BaseUserInfo.Types.UserStatus.None;
    /// <summary>
    ///用户状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Bs.Types.BaseUserInfo.Types.UserStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "market_id" field.</summary>
    public const int MarketIdFieldNumber = 13;
    private uint marketId_;
    /// <summary>
    ///登录主渠道
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MarketId {
      get { return marketId_; }
      set {
        marketId_ = value;
      }
    }

    /// <summary>Field number for the "site_id" field.</summary>
    public const int SiteIdFieldNumber = 14;
    private uint siteId_;
    /// <summary>
    ///登录子渠道
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SiteId {
      get { return siteId_; }
      set {
        siteId_ = value;
      }
    }

    /// <summary>Field number for the "reg_market_id" field.</summary>
    public const int RegMarketIdFieldNumber = 15;
    private uint regMarketId_;
    /// <summary>
    ///注册主渠道
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RegMarketId {
      get { return regMarketId_; }
      set {
        regMarketId_ = value;
      }
    }

    /// <summary>Field number for the "reg_site_id" field.</summary>
    public const int RegSiteIdFieldNumber = 16;
    private uint regSiteId_;
    /// <summary>
    ///注册子渠道
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RegSiteId {
      get { return regSiteId_; }
      set {
        regSiteId_ = value;
      }
    }

    /// <summary>Field number for the "register_data" field.</summary>
    public const int RegisterDataFieldNumber = 17;
    private string registerData_ = "";
    /// <summary>
    ///注册时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RegisterData {
      get { return registerData_; }
      set {
        registerData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gate_conn_id" field.</summary>
    public const int GateConnIdFieldNumber = 18;
    private ulong gateConnId_;
    /// <summary>
    ///所在gate
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong GateConnId {
      get { return gateConnId_; }
      set {
        gateConnId_ = value;
      }
    }

    /// <summary>Field number for the "room_conn_id" field.</summary>
    public const int RoomConnIdFieldNumber = 19;
    private ulong roomConnId_;
    /// <summary>
    ///所在房间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong RoomConnId {
      get { return roomConnId_; }
      set {
        roomConnId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BaseUserInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BaseUserInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Account != other.Account) return false;
      if (UserId != other.UserId) return false;
      if (GameId != other.GameId) return false;
      if (Gender != other.Gender) return false;
      if (FaceId != other.FaceId) return false;
      if (CustomFace != other.CustomFace) return false;
      if (NickName != other.NickName) return false;
      if (Type != other.Type) return false;
      if(!props_.Equals(other.props_)) return false;
      if (TableId != other.TableId) return false;
      if (SeatId != other.SeatId) return false;
      if (Status != other.Status) return false;
      if (MarketId != other.MarketId) return false;
      if (SiteId != other.SiteId) return false;
      if (RegMarketId != other.RegMarketId) return false;
      if (RegSiteId != other.RegSiteId) return false;
      if (RegisterData != other.RegisterData) return false;
      if (GateConnId != other.GateConnId) return false;
      if (RoomConnId != other.RoomConnId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Account.Length != 0) hash ^= Account.GetHashCode();
      if (UserId != 0UL) hash ^= UserId.GetHashCode();
      if (GameId != 0UL) hash ^= GameId.GetHashCode();
      if (Gender != 0) hash ^= Gender.GetHashCode();
      if (FaceId != 0) hash ^= FaceId.GetHashCode();
      if (CustomFace.Length != 0) hash ^= CustomFace.GetHashCode();
      if (NickName.Length != 0) hash ^= NickName.GetHashCode();
      if (Type != global::Bs.Types.BaseUserInfo.Types.UserType.Unknow) hash ^= Type.GetHashCode();
      hash ^= props_.GetHashCode();
      if (TableId != 0) hash ^= TableId.GetHashCode();
      if (SeatId != 0) hash ^= SeatId.GetHashCode();
      if (Status != global::Bs.Types.BaseUserInfo.Types.UserStatus.None) hash ^= Status.GetHashCode();
      if (MarketId != 0) hash ^= MarketId.GetHashCode();
      if (SiteId != 0) hash ^= SiteId.GetHashCode();
      if (RegMarketId != 0) hash ^= RegMarketId.GetHashCode();
      if (RegSiteId != 0) hash ^= RegSiteId.GetHashCode();
      if (RegisterData.Length != 0) hash ^= RegisterData.GetHashCode();
      if (GateConnId != 0UL) hash ^= GateConnId.GetHashCode();
      if (RoomConnId != 0UL) hash ^= RoomConnId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Account.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Account);
      }
      if (UserId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(UserId);
      }
      if (GameId != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(GameId);
      }
      if (Gender != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Gender);
      }
      if (FaceId != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(FaceId);
      }
      if (CustomFace.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(CustomFace);
      }
      if (NickName.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(NickName);
      }
      if (Type != global::Bs.Types.BaseUserInfo.Types.UserType.Unknow) {
        output.WriteRawTag(64);
        output.WriteEnum((int) Type);
      }
      props_.WriteTo(output, _repeated_props_codec);
      if (TableId != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(TableId);
      }
      if (SeatId != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(SeatId);
      }
      if (Status != global::Bs.Types.BaseUserInfo.Types.UserStatus.None) {
        output.WriteRawTag(96);
        output.WriteEnum((int) Status);
      }
      if (MarketId != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(MarketId);
      }
      if (SiteId != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(SiteId);
      }
      if (RegMarketId != 0) {
        output.WriteRawTag(120);
        output.WriteUInt32(RegMarketId);
      }
      if (RegSiteId != 0) {
        output.WriteRawTag(128, 1);
        output.WriteUInt32(RegSiteId);
      }
      if (RegisterData.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(RegisterData);
      }
      if (GateConnId != 0UL) {
        output.WriteRawTag(144, 1);
        output.WriteUInt64(GateConnId);
      }
      if (RoomConnId != 0UL) {
        output.WriteRawTag(152, 1);
        output.WriteUInt64(RoomConnId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Account.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Account);
      }
      if (UserId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(UserId);
      }
      if (GameId != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(GameId);
      }
      if (Gender != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Gender);
      }
      if (FaceId != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(FaceId);
      }
      if (CustomFace.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(CustomFace);
      }
      if (NickName.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(NickName);
      }
      if (Type != global::Bs.Types.BaseUserInfo.Types.UserType.Unknow) {
        output.WriteRawTag(64);
        output.WriteEnum((int) Type);
      }
      props_.WriteTo(ref output, _repeated_props_codec);
      if (TableId != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(TableId);
      }
      if (SeatId != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(SeatId);
      }
      if (Status != global::Bs.Types.BaseUserInfo.Types.UserStatus.None) {
        output.WriteRawTag(96);
        output.WriteEnum((int) Status);
      }
      if (MarketId != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(MarketId);
      }
      if (SiteId != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(SiteId);
      }
      if (RegMarketId != 0) {
        output.WriteRawTag(120);
        output.WriteUInt32(RegMarketId);
      }
      if (RegSiteId != 0) {
        output.WriteRawTag(128, 1);
        output.WriteUInt32(RegSiteId);
      }
      if (RegisterData.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(RegisterData);
      }
      if (GateConnId != 0UL) {
        output.WriteRawTag(144, 1);
        output.WriteUInt64(GateConnId);
      }
      if (RoomConnId != 0UL) {
        output.WriteRawTag(152, 1);
        output.WriteUInt64(RoomConnId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Account.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Account);
      }
      if (UserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UserId);
      }
      if (GameId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(GameId);
      }
      if (Gender != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Gender);
      }
      if (FaceId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FaceId);
      }
      if (CustomFace.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CustomFace);
      }
      if (NickName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NickName);
      }
      if (Type != global::Bs.Types.BaseUserInfo.Types.UserType.Unknow) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      size += props_.CalculateSize(_repeated_props_codec);
      if (TableId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TableId);
      }
      if (SeatId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SeatId);
      }
      if (Status != global::Bs.Types.BaseUserInfo.Types.UserStatus.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (MarketId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MarketId);
      }
      if (SiteId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SiteId);
      }
      if (RegMarketId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RegMarketId);
      }
      if (RegSiteId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RegSiteId);
      }
      if (RegisterData.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(RegisterData);
      }
      if (GateConnId != 0UL) {
        size += 2 + pb::CodedOutputStream.ComputeUInt64Size(GateConnId);
      }
      if (RoomConnId != 0UL) {
        size += 2 + pb::CodedOutputStream.ComputeUInt64Size(RoomConnId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BaseUserInfo other) {
      if (other == null) {
        return;
      }
      if (other.Account.Length != 0) {
        Account = other.Account;
      }
      if (other.UserId != 0UL) {
        UserId = other.UserId;
      }
      if (other.GameId != 0UL) {
        GameId = other.GameId;
      }
      if (other.Gender != 0) {
        Gender = other.Gender;
      }
      if (other.FaceId != 0) {
        FaceId = other.FaceId;
      }
      if (other.CustomFace.Length != 0) {
        CustomFace = other.CustomFace;
      }
      if (other.NickName.Length != 0) {
        NickName = other.NickName;
      }
      if (other.Type != global::Bs.Types.BaseUserInfo.Types.UserType.Unknow) {
        Type = other.Type;
      }
      props_.Add(other.props_);
      if (other.TableId != 0) {
        TableId = other.TableId;
      }
      if (other.SeatId != 0) {
        SeatId = other.SeatId;
      }
      if (other.Status != global::Bs.Types.BaseUserInfo.Types.UserStatus.None) {
        Status = other.Status;
      }
      if (other.MarketId != 0) {
        MarketId = other.MarketId;
      }
      if (other.SiteId != 0) {
        SiteId = other.SiteId;
      }
      if (other.RegMarketId != 0) {
        RegMarketId = other.RegMarketId;
      }
      if (other.RegSiteId != 0) {
        RegSiteId = other.RegSiteId;
      }
      if (other.RegisterData.Length != 0) {
        RegisterData = other.RegisterData;
      }
      if (other.GateConnId != 0UL) {
        GateConnId = other.GateConnId;
      }
      if (other.RoomConnId != 0UL) {
        RoomConnId = other.RoomConnId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Account = input.ReadString();
            break;
          }
          case 16: {
            UserId = input.ReadUInt64();
            break;
          }
          case 24: {
            GameId = input.ReadUInt64();
            break;
          }
          case 32: {
            Gender = input.ReadUInt32();
            break;
          }
          case 40: {
            FaceId = input.ReadUInt32();
            break;
          }
          case 50: {
            CustomFace = input.ReadString();
            break;
          }
          case 58: {
            NickName = input.ReadString();
            break;
          }
          case 64: {
            Type = (global::Bs.Types.BaseUserInfo.Types.UserType) input.ReadEnum();
            break;
          }
          case 74: {
            props_.AddEntriesFrom(input, _repeated_props_codec);
            break;
          }
          case 80: {
            TableId = input.ReadUInt32();
            break;
          }
          case 88: {
            SeatId = input.ReadUInt32();
            break;
          }
          case 96: {
            Status = (global::Bs.Types.BaseUserInfo.Types.UserStatus) input.ReadEnum();
            break;
          }
          case 104: {
            MarketId = input.ReadUInt32();
            break;
          }
          case 112: {
            SiteId = input.ReadUInt32();
            break;
          }
          case 120: {
            RegMarketId = input.ReadUInt32();
            break;
          }
          case 128: {
            RegSiteId = input.ReadUInt32();
            break;
          }
          case 138: {
            RegisterData = input.ReadString();
            break;
          }
          case 144: {
            GateConnId = input.ReadUInt64();
            break;
          }
          case 152: {
            RoomConnId = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Account = input.ReadString();
            break;
          }
          case 16: {
            UserId = input.ReadUInt64();
            break;
          }
          case 24: {
            GameId = input.ReadUInt64();
            break;
          }
          case 32: {
            Gender = input.ReadUInt32();
            break;
          }
          case 40: {
            FaceId = input.ReadUInt32();
            break;
          }
          case 50: {
            CustomFace = input.ReadString();
            break;
          }
          case 58: {
            NickName = input.ReadString();
            break;
          }
          case 64: {
            Type = (global::Bs.Types.BaseUserInfo.Types.UserType) input.ReadEnum();
            break;
          }
          case 74: {
            props_.AddEntriesFrom(ref input, _repeated_props_codec);
            break;
          }
          case 80: {
            TableId = input.ReadUInt32();
            break;
          }
          case 88: {
            SeatId = input.ReadUInt32();
            break;
          }
          case 96: {
            Status = (global::Bs.Types.BaseUserInfo.Types.UserStatus) input.ReadEnum();
            break;
          }
          case 104: {
            MarketId = input.ReadUInt32();
            break;
          }
          case 112: {
            SiteId = input.ReadUInt32();
            break;
          }
          case 120: {
            RegMarketId = input.ReadUInt32();
            break;
          }
          case 128: {
            RegSiteId = input.ReadUInt32();
            break;
          }
          case 138: {
            RegisterData = input.ReadString();
            break;
          }
          case 144: {
            GateConnId = input.ReadUInt64();
            break;
          }
          case 152: {
            RoomConnId = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the BaseUserInfo message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      ///用户类型
      /// </summary>
      public enum UserType {
        /// <summary>
        ///未知
        /// </summary>
        [pbr::OriginalName("unknow")] Unknow = 0,
        /// <summary>
        ///正常类型
        /// </summary>
        [pbr::OriginalName("normal")] Normal = 1,
        /// <summary>
        ///机器人
        /// </summary>
        [pbr::OriginalName("robot")] Robot = 10,
      }

      /// <summary>
      ///用户状态
      /// </summary>
      public enum UserStatus {
        /// <summary>
        ///没有状态
        /// </summary>
        [pbr::OriginalName("none")] None = 0,
        /// <summary>
        ///站立状态
        /// </summary>
        [pbr::OriginalName("free")] Free = 1,
        /// <summary>
        ///坐下状态
        /// </summary>
        [pbr::OriginalName("sit")] Sit = 2,
        /// <summary>
        ///同意状态
        /// </summary>
        [pbr::OriginalName("ready")] Ready = 3,
        /// <summary>
        ///旁观状态
        /// </summary>
        [pbr::OriginalName("lookon")] Lookon = 4,
        /// <summary>
        ///游戏状态
        /// </summary>
        [pbr::OriginalName("playing")] Playing = 5,
        /// <summary>
        ///断线状态
        /// </summary>
        [pbr::OriginalName("offline")] Offline = 6,
      }

    }
    #endregion

  }

  public sealed partial class RoomInfo : pb::IMessage<RoomInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RoomInfo> _parser = new pb::MessageParser<RoomInfo>(() => new RoomInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RoomInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bs.Types.TypesReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoomInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoomInfo(RoomInfo other) : this() {
      appInfo_ = other.appInfo_ != null ? other.appInfo_.Clone() : null;
      kind_ = other.kind_;
      type_ = other.type_;
      level_ = other.level_;
      name_ = other.name_;
      cellScore_ = other.cellScore_;
      revenueRatio_ = other.revenueRatio_;
      serviceScore_ = other.serviceScore_;
      serviceIngot_ = other.serviceIngot_;
      restrictScore_ = other.restrictScore_;
      minTableScore_ = other.minTableScore_;
      minEnterScore_ = other.minEnterScore_;
      maxEnterScore_ = other.maxEnterScore_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoomInfo Clone() {
      return new RoomInfo(this);
    }

    /// <summary>Field number for the "app_info" field.</summary>
    public const int AppInfoFieldNumber = 1;
    private global::Bs.Types.BaseAppInfo appInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Bs.Types.BaseAppInfo AppInfo {
      get { return appInfo_; }
      set {
        appInfo_ = value;
      }
    }

    /// <summary>Field number for the "kind" field.</summary>
    public const int KindFieldNumber = 2;
    private uint kind_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Kind {
      get { return kind_; }
      set {
        kind_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private global::Bs.Types.RoomInfo.Types.RoomType type_ = global::Bs.Types.RoomInfo.Types.RoomType.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Bs.Types.RoomInfo.Types.RoomType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 4;
    private uint level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 5;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cell_score" field.</summary>
    public const int CellScoreFieldNumber = 6;
    private long cellScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CellScore {
      get { return cellScore_; }
      set {
        cellScore_ = value;
      }
    }

    /// <summary>Field number for the "revenue_ratio" field.</summary>
    public const int RevenueRatioFieldNumber = 7;
    private uint revenueRatio_;
    /// <summary>
    ///税收比例
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RevenueRatio {
      get { return revenueRatio_; }
      set {
        revenueRatio_ = value;
      }
    }

    /// <summary>Field number for the "service_score" field.</summary>
    public const int ServiceScoreFieldNumber = 8;
    private long serviceScore_;
    /// <summary>
    ///服务费用
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ServiceScore {
      get { return serviceScore_; }
      set {
        serviceScore_ = value;
      }
    }

    /// <summary>Field number for the "service_ingot" field.</summary>
    public const int ServiceIngotFieldNumber = 9;
    private long serviceIngot_;
    /// <summary>
    ///服务费用
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ServiceIngot {
      get { return serviceIngot_; }
      set {
        serviceIngot_ = value;
      }
    }

    /// <summary>Field number for the "restrict_score" field.</summary>
    public const int RestrictScoreFieldNumber = 10;
    private long restrictScore_;
    /// <summary>
    ///限制积分
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long RestrictScore {
      get { return restrictScore_; }
      set {
        restrictScore_ = value;
      }
    }

    /// <summary>Field number for the "min_table_score" field.</summary>
    public const int MinTableScoreFieldNumber = 11;
    private long minTableScore_;
    /// <summary>
    ///最低积分
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MinTableScore {
      get { return minTableScore_; }
      set {
        minTableScore_ = value;
      }
    }

    /// <summary>Field number for the "min_enter_score" field.</summary>
    public const int MinEnterScoreFieldNumber = 12;
    private long minEnterScore_;
    /// <summary>
    ///最低积分
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MinEnterScore {
      get { return minEnterScore_; }
      set {
        minEnterScore_ = value;
      }
    }

    /// <summary>Field number for the "max_enter_score" field.</summary>
    public const int MaxEnterScoreFieldNumber = 13;
    private long maxEnterScore_;
    /// <summary>
    ///最高积分
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MaxEnterScore {
      get { return maxEnterScore_; }
      set {
        maxEnterScore_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RoomInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RoomInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AppInfo, other.AppInfo)) return false;
      if (Kind != other.Kind) return false;
      if (Type != other.Type) return false;
      if (Level != other.Level) return false;
      if (Name != other.Name) return false;
      if (CellScore != other.CellScore) return false;
      if (RevenueRatio != other.RevenueRatio) return false;
      if (ServiceScore != other.ServiceScore) return false;
      if (ServiceIngot != other.ServiceIngot) return false;
      if (RestrictScore != other.RestrictScore) return false;
      if (MinTableScore != other.MinTableScore) return false;
      if (MinEnterScore != other.MinEnterScore) return false;
      if (MaxEnterScore != other.MaxEnterScore) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (appInfo_ != null) hash ^= AppInfo.GetHashCode();
      if (Kind != 0) hash ^= Kind.GetHashCode();
      if (Type != global::Bs.Types.RoomInfo.Types.RoomType.None) hash ^= Type.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (CellScore != 0L) hash ^= CellScore.GetHashCode();
      if (RevenueRatio != 0) hash ^= RevenueRatio.GetHashCode();
      if (ServiceScore != 0L) hash ^= ServiceScore.GetHashCode();
      if (ServiceIngot != 0L) hash ^= ServiceIngot.GetHashCode();
      if (RestrictScore != 0L) hash ^= RestrictScore.GetHashCode();
      if (MinTableScore != 0L) hash ^= MinTableScore.GetHashCode();
      if (MinEnterScore != 0L) hash ^= MinEnterScore.GetHashCode();
      if (MaxEnterScore != 0L) hash ^= MaxEnterScore.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (appInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AppInfo);
      }
      if (Kind != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Kind);
      }
      if (Type != global::Bs.Types.RoomInfo.Types.RoomType.None) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      if (Level != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Level);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Name);
      }
      if (CellScore != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(CellScore);
      }
      if (RevenueRatio != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(RevenueRatio);
      }
      if (ServiceScore != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(ServiceScore);
      }
      if (ServiceIngot != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(ServiceIngot);
      }
      if (RestrictScore != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(RestrictScore);
      }
      if (MinTableScore != 0L) {
        output.WriteRawTag(88);
        output.WriteInt64(MinTableScore);
      }
      if (MinEnterScore != 0L) {
        output.WriteRawTag(96);
        output.WriteInt64(MinEnterScore);
      }
      if (MaxEnterScore != 0L) {
        output.WriteRawTag(104);
        output.WriteInt64(MaxEnterScore);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (appInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AppInfo);
      }
      if (Kind != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Kind);
      }
      if (Type != global::Bs.Types.RoomInfo.Types.RoomType.None) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      if (Level != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Level);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Name);
      }
      if (CellScore != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(CellScore);
      }
      if (RevenueRatio != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(RevenueRatio);
      }
      if (ServiceScore != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(ServiceScore);
      }
      if (ServiceIngot != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(ServiceIngot);
      }
      if (RestrictScore != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(RestrictScore);
      }
      if (MinTableScore != 0L) {
        output.WriteRawTag(88);
        output.WriteInt64(MinTableScore);
      }
      if (MinEnterScore != 0L) {
        output.WriteRawTag(96);
        output.WriteInt64(MinEnterScore);
      }
      if (MaxEnterScore != 0L) {
        output.WriteRawTag(104);
        output.WriteInt64(MaxEnterScore);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (appInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AppInfo);
      }
      if (Kind != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Kind);
      }
      if (Type != global::Bs.Types.RoomInfo.Types.RoomType.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Level);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (CellScore != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CellScore);
      }
      if (RevenueRatio != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RevenueRatio);
      }
      if (ServiceScore != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ServiceScore);
      }
      if (ServiceIngot != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ServiceIngot);
      }
      if (RestrictScore != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RestrictScore);
      }
      if (MinTableScore != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MinTableScore);
      }
      if (MinEnterScore != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MinEnterScore);
      }
      if (MaxEnterScore != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxEnterScore);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RoomInfo other) {
      if (other == null) {
        return;
      }
      if (other.appInfo_ != null) {
        if (appInfo_ == null) {
          AppInfo = new global::Bs.Types.BaseAppInfo();
        }
        AppInfo.MergeFrom(other.AppInfo);
      }
      if (other.Kind != 0) {
        Kind = other.Kind;
      }
      if (other.Type != global::Bs.Types.RoomInfo.Types.RoomType.None) {
        Type = other.Type;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.CellScore != 0L) {
        CellScore = other.CellScore;
      }
      if (other.RevenueRatio != 0) {
        RevenueRatio = other.RevenueRatio;
      }
      if (other.ServiceScore != 0L) {
        ServiceScore = other.ServiceScore;
      }
      if (other.ServiceIngot != 0L) {
        ServiceIngot = other.ServiceIngot;
      }
      if (other.RestrictScore != 0L) {
        RestrictScore = other.RestrictScore;
      }
      if (other.MinTableScore != 0L) {
        MinTableScore = other.MinTableScore;
      }
      if (other.MinEnterScore != 0L) {
        MinEnterScore = other.MinEnterScore;
      }
      if (other.MaxEnterScore != 0L) {
        MaxEnterScore = other.MaxEnterScore;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (appInfo_ == null) {
              AppInfo = new global::Bs.Types.BaseAppInfo();
            }
            input.ReadMessage(AppInfo);
            break;
          }
          case 16: {
            Kind = input.ReadUInt32();
            break;
          }
          case 24: {
            Type = (global::Bs.Types.RoomInfo.Types.RoomType) input.ReadEnum();
            break;
          }
          case 32: {
            Level = input.ReadUInt32();
            break;
          }
          case 42: {
            Name = input.ReadString();
            break;
          }
          case 48: {
            CellScore = input.ReadInt64();
            break;
          }
          case 56: {
            RevenueRatio = input.ReadUInt32();
            break;
          }
          case 64: {
            ServiceScore = input.ReadInt64();
            break;
          }
          case 72: {
            ServiceIngot = input.ReadInt64();
            break;
          }
          case 80: {
            RestrictScore = input.ReadInt64();
            break;
          }
          case 88: {
            MinTableScore = input.ReadInt64();
            break;
          }
          case 96: {
            MinEnterScore = input.ReadInt64();
            break;
          }
          case 104: {
            MaxEnterScore = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (appInfo_ == null) {
              AppInfo = new global::Bs.Types.BaseAppInfo();
            }
            input.ReadMessage(AppInfo);
            break;
          }
          case 16: {
            Kind = input.ReadUInt32();
            break;
          }
          case 24: {
            Type = (global::Bs.Types.RoomInfo.Types.RoomType) input.ReadEnum();
            break;
          }
          case 32: {
            Level = input.ReadUInt32();
            break;
          }
          case 42: {
            Name = input.ReadString();
            break;
          }
          case 48: {
            CellScore = input.ReadInt64();
            break;
          }
          case 56: {
            RevenueRatio = input.ReadUInt32();
            break;
          }
          case 64: {
            ServiceScore = input.ReadInt64();
            break;
          }
          case 72: {
            ServiceIngot = input.ReadInt64();
            break;
          }
          case 80: {
            RestrictScore = input.ReadInt64();
            break;
          }
          case 88: {
            MinTableScore = input.ReadInt64();
            break;
          }
          case 96: {
            MinEnterScore = input.ReadInt64();
            break;
          }
          case 104: {
            MaxEnterScore = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the RoomInfo message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum RoomType {
        [pbr::OriginalName("none")] None = 0,
        /// <summary>
        ///金币
        /// </summary>
        [pbr::OriginalName("gold")] Gold = 1,
        /// <summary>
        ///私有
        /// </summary>
        [pbr::OriginalName("private")] Private = 16,
        /// <summary>
        ///红包
        /// </summary>
        [pbr::OriginalName("redPack")] RedPack = 32,
      }

    }
    #endregion

  }

  /// <summary>
  ///桌子状态
  /// </summary>
  public sealed partial class TableStatus : pb::IMessage<TableStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TableStatus> _parser = new pb::MessageParser<TableStatus>(() => new TableStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TableStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bs.Types.TypesReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TableStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TableStatus(TableStatus other) : this() {
      tableLock_ = other.tableLock_;
      playStatus_ = other.playStatus_;
      clubNum_ = other.clubNum_;
      roomNum_ = other.roomNum_;
      cellScore_ = other.cellScore_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TableStatus Clone() {
      return new TableStatus(this);
    }

    /// <summary>Field number for the "table_lock" field.</summary>
    public const int TableLockFieldNumber = 1;
    private uint tableLock_;
    /// <summary>
    ///锁定标志
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TableLock {
      get { return tableLock_; }
      set {
        tableLock_ = value;
      }
    }

    /// <summary>Field number for the "play_status" field.</summary>
    public const int PlayStatusFieldNumber = 2;
    private uint playStatus_;
    /// <summary>
    ///游戏标志
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PlayStatus {
      get { return playStatus_; }
      set {
        playStatus_ = value;
      }
    }

    /// <summary>Field number for the "club_num" field.</summary>
    public const int ClubNumFieldNumber = 3;
    private uint clubNum_;
    /// <summary>
    ///圈子号码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ClubNum {
      get { return clubNum_; }
      set {
        clubNum_ = value;
      }
    }

    /// <summary>Field number for the "room_num" field.</summary>
    public const int RoomNumFieldNumber = 4;
    private uint roomNum_;
    /// <summary>
    ///房间号码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RoomNum {
      get { return roomNum_; }
      set {
        roomNum_ = value;
      }
    }

    /// <summary>Field number for the "cell_score" field.</summary>
    public const int CellScoreFieldNumber = 5;
    private int cellScore_;
    /// <summary>
    ///单元积分
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CellScore {
      get { return cellScore_; }
      set {
        cellScore_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TableStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TableStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TableLock != other.TableLock) return false;
      if (PlayStatus != other.PlayStatus) return false;
      if (ClubNum != other.ClubNum) return false;
      if (RoomNum != other.RoomNum) return false;
      if (CellScore != other.CellScore) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (TableLock != 0) hash ^= TableLock.GetHashCode();
      if (PlayStatus != 0) hash ^= PlayStatus.GetHashCode();
      if (ClubNum != 0) hash ^= ClubNum.GetHashCode();
      if (RoomNum != 0) hash ^= RoomNum.GetHashCode();
      if (CellScore != 0) hash ^= CellScore.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TableLock != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(TableLock);
      }
      if (PlayStatus != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(PlayStatus);
      }
      if (ClubNum != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(ClubNum);
      }
      if (RoomNum != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(RoomNum);
      }
      if (CellScore != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(CellScore);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TableLock != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(TableLock);
      }
      if (PlayStatus != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(PlayStatus);
      }
      if (ClubNum != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(ClubNum);
      }
      if (RoomNum != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(RoomNum);
      }
      if (CellScore != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(CellScore);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (TableLock != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TableLock);
      }
      if (PlayStatus != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PlayStatus);
      }
      if (ClubNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClubNum);
      }
      if (RoomNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RoomNum);
      }
      if (CellScore != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CellScore);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TableStatus other) {
      if (other == null) {
        return;
      }
      if (other.TableLock != 0) {
        TableLock = other.TableLock;
      }
      if (other.PlayStatus != 0) {
        PlayStatus = other.PlayStatus;
      }
      if (other.ClubNum != 0) {
        ClubNum = other.ClubNum;
      }
      if (other.RoomNum != 0) {
        RoomNum = other.RoomNum;
      }
      if (other.CellScore != 0) {
        CellScore = other.CellScore;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TableLock = input.ReadUInt32();
            break;
          }
          case 16: {
            PlayStatus = input.ReadUInt32();
            break;
          }
          case 24: {
            ClubNum = input.ReadUInt32();
            break;
          }
          case 32: {
            RoomNum = input.ReadUInt32();
            break;
          }
          case 40: {
            CellScore = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TableLock = input.ReadUInt32();
            break;
          }
          case 16: {
            PlayStatus = input.ReadUInt32();
            break;
          }
          case 24: {
            ClubNum = input.ReadUInt32();
            break;
          }
          case 32: {
            RoomNum = input.ReadUInt32();
            break;
          }
          case 40: {
            CellScore = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
